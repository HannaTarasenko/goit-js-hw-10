{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst timeInput = document.querySelector('#datetime-picker');\nconst startButton = document.querySelector('button[data-start]');\nconst dayBlock = document.querySelector('[data-days]');\nconst hoursBlock = document.querySelector('[data-hours]');\nconst minutesBlock = document.querySelector('[data-minutes]');\nconst secondsBlock = document.querySelector('[data-seconds]');\n\nlet userSelectedDate = null;\nlet intervalID = null;\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        const selectedDate = selectedDates[0];\n        if (selectedDate <= new Date()) {\n            iziToast.error({ title: 'Error', message: 'Please choose a date in the future' });\n            startButton.setAttribute('disabled', '');\n            startButton.classList.remove('valid-date');\n        } else {\n            startButton.removeAttribute('disabled', '')\n            startButton.classList.add('valid-date')\n        }\n    }\n};\n\nflatpickr(timeInput, options);\n\nstartButton.addEventListener('click', () => {\n    if (!userSelectedDate) return;\n    \n    startButton.disabled = true;\n    timeInput.disabled = true;\n\n    intervalID = setInterval(() => {\n        const currentTime = new Date();\n        const diff = userSelectedDate - currentTime;\n        \n        if (diff <= 0) {\n            clearInterval(intervalID);\n            updateTimeBlocks({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n            timeInput.disabled = false;\n            return;\n        }\n\n        const time = convertMs(diff);\n        updateTimeBlocks(time);\n    }, 1000);\n});\n\nfunction convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}\n\nfunction updateTimeBlocks({ days, hours, minutes, seconds }) {\n    dayBlock.textContent = addLeadingZero(days);\n    hoursBlock.textContent = addLeadingZero(hours);\n    minutesBlock.textContent = addLeadingZero(minutes);\n    secondsBlock.textContent = addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\n    return String(value).padStart(2, '0');\n}\n"],"names":["timeInput","startButton","options","selectedDates","iziToast","flatpickr"],"mappings":"+IAKA,MAAMA,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAc,SAAS,cAAc,oBAAoB,EAC9C,SAAS,cAAc,aAAa,EAClC,SAAS,cAAc,cAAc,EACnC,SAAS,cAAc,gBAAgB,EACvC,SAAS,cAAc,gBAAgB,EAK5D,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACEA,EAAc,CAAC,GAChB,IAAI,MACpBC,EAAS,MAAM,CAAE,MAAO,QAAS,QAAS,oCAAoC,CAAE,EAChFH,EAAY,aAAa,WAAY,EAAE,EACvCA,EAAY,UAAU,OAAO,YAAY,IAEzCA,EAAY,gBAAgB,WAAY,EAAE,EAC1CA,EAAY,UAAU,IAAI,YAAY,EAE7C,CACL,EAEAI,EAAUL,EAAWE,CAAO,EAE5BD,EAAY,iBAAiB,QAAS,IAAM,CAoB5C,CAAC"}